load("E:/R-Programing/RCaseStudy2/.RData")
str(customer_360)
numerical_stats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p=p1,p=p5,p=p10,q1=q1,q2=q2,
q3=q3,p_90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,numerical_stats)))
View(numerical_stat_report)
View(numerical_stat_report)
stores<-read.csv(choose.files(),header = T)
data<-stores
View(data)
with(data,mean(TotalSales))
quantile(data$TotalSales,c(.3,.6,.9))
which.max(data$TotalSales)
which.max(!which.max(data$TotalSales))
data$Sales_rank<-rank(data$TotalSales,ties.method = 'first')
View(data)
data$Sales_rank<-rank(data$TotalSales,ties.method = 'last')
View(data)
data$Sales_rank<-rank(data$TotalSales,ties.method = 'first')
View(data)
data$Sales_rank<-rank(data$TotalSales,ties.method = 'second')
data$Sales_rank<-rank(data$TotalSales,ties.method = 'random')
data$Sales_rank<-rank(data$TotalSales,ties.method = 'random')
View(data)
data$Sales_rank<-rank(data$TotalSales,ties.method = 'min')
View(data)
s1<-table(stores$StoreType)
View(s1)
s2<-prop.table(s1)
View(s2)
s2<-prop.table(table(stores$StoreType))
View(s2)
rbind(s1,s2)
cbind(s1,s2)
install.packages('gmodels',dependencies = T)
require(gmodels)
CrossTable(stores$StoreType)
search()
version
version()
sessionInfo()
session
abc=3
save.image("E:/R-Programing/AllAssignemntHistory.RData")
sessionInfo()
abc=3
a = c(1,2,3,4,5,6)
b = c('a','b','c','d','e','f')
c = c(TRUE,FALSE)
objects()
x = c(4,4,5,6,7,2,9)
numOfObs <- length(x)
mean <- mean(x)
max <- max(x)
min <- min(x)
variance <- var(x)
x[3]
x[,1]
x[2,3]
x[1:2]
x[1:2,2]
x[1:2:2]
x[[1:2],2]
x[1:3]
x[1,3,5,7,9]
x[1,3,5,7]
x[1,3,5]
x[1:3:5]
x[1:3,by(2)]
seq(0,1)
seq(x,2)
seq(2,x)
seq(x,x,2)
rep(x)
rep(x,2)
rep(x,-1)
seq(x[1],x[length(x)],by=2)
rep(x[1],x[length(x)],by=2)
rep(x[1],x[length(x)],by=1)
seq(x[1],x[length(x)],by=1)
seq(x[1],x[length(x)],by=0)
rev(x)
x
n <- length(x)
c(x[seq(n) %% 2 == 1],rev(x[seq(n) %% 2 == 0]))
x[seq(n) %% 2 == 1]
x[2:6]
my_matrix <- matrix(data = 1:24,nrow = 4,ncol = 6)
my_matrix
my_matrix <- matrix(data = 1:24,nrow = 6,ncol = 4,byrow = T)
my_matrix
storeID <- c(111,208,113,408)
tenure <- c(24,34,28,52)
storeType <- c('Type1','Type2','Type1','Type1')
status <- c('Poor','Improved','Excellent','Poor')
my_dataframe <- data.frame(storeID <- c(111,208,113,408),
tenure <- c(24,34,28,52),
storeType <- c('Type1','Type2','Type1','Type1'),
status <- c('Poor','Improved','Excellent','Poor'))
my_dataframe
my_dataframe <- data.frame(storeID = c(111,208,113,408),
tenure = c(24,34,28,52),
storeType = c('Type1','Type2','Type1','Type1'),
status = c('Poor','Improved','Excellent','Poor'))
my_dataframe
my_dataframe[storeID,tenure]
my_dataframe[$storeID,$tenure]
my_dataframe[my_dataframe$storeID,my_dataframe$tenure]
my_dataframe.storeID
my_dataframe$storeID
c(my_dataframe$storeID,my_dataframe$tenure)
my_dataframe[storeID]
my_dataframe$storeID,my_dataframe$tenure
data.frame(my_dataframe$storeID,my_dataframe$tenure)
(my_dataframe,c('storeID'))
my_dataframe(my_dataframe,c('storeID'))
my_dataframe[,c('storeID')]
my_dataframe[,c('storeID','tenure')]
my_dataframe[,c('storeType','status')]
my_dataframe[,c('tenure')]
mylist <- list(h=c(25,26,18,39),j=matrix(data = 1:10,nrow = 5,ncol = 2,byrow = T),k=c('One','Two','Three'))
mylist[,j]
mylist[,c('j')]
mylist
mylist$h
mylist[[1]]
mylist[[1,2]]
mylist[[2],]
mylist[[2]]
mylist[[]]
mylist[[1],2]
mylist[[1]][2]
my[[2]]
mylist[[2]]
stores<-read.csv(choose.files())
summary(stores)
(summary(stores))
View(summary(stores))
summary(stores)
with(stores,summary(OperatingCost))
summary(stores$OperatingCost)
with(stores,summary(OperatingCost))
class(stores)
names(stores)
length(stores)
dim(stores)
str(stores)
head(stores)
tail(stores)
fix(stores)
stores$Operating_AcqCostPercust <- stores$OperatingCost + stores$AcqCostPercust
stores
stores<-transform(stores, TotalCost=AcqCostPercust + OperatingCost)
stores
stores$StoreClass[stores$TotalSales<120] <- 'Low Performance Store'
stores$StoreClass[stores$TotalSales>=120 & stores$TotalSales<240] <- 'Average Performance store'
stores$StoreClass[stores$TotalSales>=240] <- 'High Performance Store'
stores
stores$AcqCostPercust <- 'AcqCost'
stores
stores<-read.csv(choose.files())
summary(stores)
stores$Operating_AcqCostPercust <- stores$OperatingCost + stores$AcqCostPercust
stores<-transform(stores, TotalCost=AcqCostPercust + OperatingCost)
stores$StoreClass[stores$TotalSales<120] <- 'Low Performance Store'
stores$StoreClass[stores$TotalSales>=120 & stores$TotalSales<240] <- 'Average Performance store'
stores$StoreClass[stores$TotalSales>=240] <- 'High Performance Store'
require(reshape)
rename(stores,c(AcqCostPercust='AcqCost'))
sum(is.na(stores))
sum(is.na(stores[1]))
sum(is.na(stores[,1:10]))
for(i in 1:15){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i]))/length(stores[i]))
}
print('Missing Value Summary')
for(i in 1:15){
print(colnames(stores)[i])
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary : ' + colnames(stores)[i] + ' ,Type : ' + class(stores[,i]))
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary : ' + as.character(colnames(stores)[i]) + ' ,Type : ' + as.character(class(stores[,i])))
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary : '  as.character(colnames(stores)[i]) + ' ,Type : ' + as.character(class(stores[,i])))
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores<-rename(stores,c(AcqCostPercust='AcqCost'))
stores$AcqCost[stores$AcqCost == NA] <- 0
stores
stores$AcqCost[is.na(stores$AcqCost)] <- 0
stores
na.omit(stores)
stores[!is.na(stores[i]),]
for(i in 1:15){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
for(i in 1:20){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
for(i in 1:19){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores[!is.na(stores[i]),]
for(i in 1:15){
stores[!is.na(stores$stores[i]),]
}
for(i in 1:15){
stores[!is.na(stores$stores[i]),]
}
stores[!(is.na(stores$stores[i])),]
for(i in 1:17){
stores[!(is.na(stores$stores[i])),]
}
warning()
for(i in 1:17){
stores[!(is.na(stores$stores[i])),]
}
warning()
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores$Operating_AcqCostPercust[is.na(stores$Operating_AcqCostPercust)] <- 0
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores$TotalCost[!(is.na(stores$TotalCost)),]
stores[!(is.na(stores$TotalCost)),]
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores
stores[!(is.na(stores$TotalCost)),]
View(stores)
View(stores[!(is.na(stores$TotalCost)),])
stores<-stores[!(is.na(stores$TotalCost)),])
stores<-stores[!(is.na(stores$TotalCost)),]
View(stores)
newstore <- stores[order(stores$StoreType,descending=T),]
newstore <- stores[order(stores$StoreType),]
View(newstore)
newstore2 <- stores[order(stores$Location,-stores$TotalSales),]
View(newstore2)
date1 <- as.Date(c('2014-06-22','2014-02-13')
)
class(date1)
date1
date2 <- as.Date(c('01/05/1965','08/16/1975'))
date2
date2 <- as.Date(c('01/05/1965','08/16/1975'),format = 'dd/mm/yyyy')
date2
date2 <- as.Date(c('01/05/1965','08/16/1975'),format = '%d/%m/%y')
date2
date2 <- as.Date(c('01/05/1965','08/16/1975'),format = '%m/%d/%y')
date2
s1 <- stores[c(5,7,8,9)]
s1
s2 <- stores[-c(5,7,8,9)]
s2
s3 <- stores[1:10,]
s3
s4 <- stores[stores$StoreType=='Apparel' & stores$TotalSales > 100]
s4 <- stores[stores$StoreType ='Apparel' & stores$TotalSales > 100]
s4 <- stores[stores$StoreType == 'Apparel' & stores$TotalSales > 100]
s4 <- stores[stores$TotalSales > 100]
s4 <- stores[stores$StoreType == 'Apparel']
s4 <- stores[stores$StoreType == 'Apparel' & stores$TotalSales > 100,]
s4
s5 <- stores[100<stores$TotalSales<300,c('StoreCode','StoreName','Location','TotalSales')]
s5 <- stores[stores$TotalSales>100 & stores$TotalSales<300,c('StoreCode','StoreName','Location','TotalSales')]
s5
s6 <- stores[stores$StoreType=='Electronics' & stores$TotalSales>100,1:10]
s6
s6 <- stores[stores$StoreType=='Electronincs' & stores$TotalSales>100,1:10]
s6
ethnicity <- as.factor(c('White','African American','White','Asian'))
status <- as.factor(c('Poor','Improved','Excellent','Poor'))
outcome <- c(1,3,2,4,3,1,1)
status
outcome <- as.factor(c(1,3,2,4,3,1,1))
outcome
outcome <- c('Poor','Average','Good','Excellent')
label <- c('Poor','Average','Good','Excellent')
outcome <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = label)
outcome
ethnicity <- c('White','African American','White','Asian')
status <- c('Poor','Improved','Excellent','Poor')
label <- c('Poor','Average','Good','Excellent')
outcome2 <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = ethnicity)
outcome2
outcome2 <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = ethnicity)
ethnicity <- c('White','African American','Brown','Asian')
outcome2 <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = ethnicity)
outcome2
