sum(is.na(stores[,1:10]))
for(i in 1:15){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i]))/length(stores[i]))
}
print('Missing Value Summary')
for(i in 1:15){
print(colnames(stores)[i])
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary : ' + colnames(stores)[i] + ' ,Type : ' + class(stores[,i]))
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary : ' + as.character(colnames(stores)[i]) + ' ,Type : ' + as.character(class(stores[,i])))
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary : '  as.character(colnames(stores)[i]) + ' ,Type : ' + as.character(class(stores[,i])))
print(sum(is.na(stores[i]))/length(stores[i]))
}
for(i in 1:15){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores<-rename(stores,c(AcqCostPercust='AcqCost'))
stores$AcqCost[stores$AcqCost == NA] <- 0
stores
stores$AcqCost[is.na(stores$AcqCost)] <- 0
stores
na.omit(stores)
stores[!is.na(stores[i]),]
for(i in 1:15){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
for(i in 1:20){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
for(i in 1:19){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores[!is.na(stores[i]),]
for(i in 1:15){
stores[!is.na(stores$stores[i]),]
}
for(i in 1:15){
stores[!is.na(stores$stores[i]),]
}
stores[!(is.na(stores$stores[i])),]
for(i in 1:17){
stores[!(is.na(stores$stores[i])),]
}
warning()
for(i in 1:17){
stores[!(is.na(stores$stores[i])),]
}
warning()
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores$Operating_AcqCostPercust[is.na(stores$Operating_AcqCostPercust)] <- 0
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores$TotalCost[!(is.na(stores$TotalCost)),]
stores[!(is.na(stores$TotalCost)),]
for(i in 1:18){
print('Missing Value Summary')
print(colnames(stores)[i])
print(class(stores[,i]))
print(sum(is.na(stores[i])))
}
stores
stores[!(is.na(stores$TotalCost)),]
View(stores)
View(stores[!(is.na(stores$TotalCost)),])
stores<-stores[!(is.na(stores$TotalCost)),])
stores<-stores[!(is.na(stores$TotalCost)),]
View(stores)
newstore <- stores[order(stores$StoreType,descending=T),]
newstore <- stores[order(stores$StoreType),]
View(newstore)
newstore2 <- stores[order(stores$Location,-stores$TotalSales),]
View(newstore2)
date1 <- as.Date(c('2014-06-22','2014-02-13')
)
class(date1)
date1
date2 <- as.Date(c('01/05/1965','08/16/1975'))
date2
date2 <- as.Date(c('01/05/1965','08/16/1975'),format = 'dd/mm/yyyy')
date2
date2 <- as.Date(c('01/05/1965','08/16/1975'),format = '%d/%m/%y')
date2
date2 <- as.Date(c('01/05/1965','08/16/1975'),format = '%m/%d/%y')
date2
s1 <- stores[c(5,7,8,9)]
s1
s2 <- stores[-c(5,7,8,9)]
s2
s3 <- stores[1:10,]
s3
s4 <- stores[stores$StoreType=='Apparel' & stores$TotalSales > 100]
s4 <- stores[stores$StoreType ='Apparel' & stores$TotalSales > 100]
s4 <- stores[stores$StoreType == 'Apparel' & stores$TotalSales > 100]
s4 <- stores[stores$TotalSales > 100]
s4 <- stores[stores$StoreType == 'Apparel']
s4 <- stores[stores$StoreType == 'Apparel' & stores$TotalSales > 100,]
s4
s5 <- stores[100<stores$TotalSales<300,c('StoreCode','StoreName','Location','TotalSales')]
s5 <- stores[stores$TotalSales>100 & stores$TotalSales<300,c('StoreCode','StoreName','Location','TotalSales')]
s5
s6 <- stores[stores$StoreType=='Electronics' & stores$TotalSales>100,1:10]
s6
s6 <- stores[stores$StoreType=='Electronincs' & stores$TotalSales>100,1:10]
s6
ethnicity <- as.factor(c('White','African American','White','Asian'))
status <- as.factor(c('Poor','Improved','Excellent','Poor'))
outcome <- c(1,3,2,4,3,1,1)
status
outcome <- as.factor(c(1,3,2,4,3,1,1))
outcome
outcome <- c('Poor','Average','Good','Excellent')
label <- c('Poor','Average','Good','Excellent')
outcome <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = label)
outcome
ethnicity <- c('White','African American','White','Asian')
status <- c('Poor','Improved','Excellent','Poor')
label <- c('Poor','Average','Good','Excellent')
outcome2 <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = ethnicity)
outcome2
outcome2 <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = ethnicity)
ethnicity <- c('White','African American','Brown','Asian')
outcome2 <- factor(c(1,3,2,4,3,1,1),levels = c(1,2,3,4),labels = ethnicity)
outcome2
setwd("E:/R-Programing/TelecomAnalysis-Churn/")
cust_demo <- read.csv("cellvoice_demo.csv")
cust_trans <- read.csv("cellvoice_trans.csv")
str(cust_demo)
summary(cust_demo)
require(rmarkdown)
require(markdown)
require(knitr)
require(rmarkdown)
require(markdown)
require(knitr)
render("E:\R-Programing\TelecomAnalysis-Churn",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",ioslides_presentation())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",slidy_presentation())
require(dplyr)
cust_360 = cust_demo %>% left_join(cust_trans,by='CustID')
cust_360<-cust_360 %>% mutate(age_seg = ifelse(age>60,"60+",ifelse(age>45 & age <60,"45-60",ifelse(age>35 & age<45,"35-45",ifelse(age>25 & age<35,"25-35","<25")))))
cust_360<-cust_360 %>% mutate(age_seg = ifelse(age>60,"60+",ifelse(age>45 & age <60,"45-60",ifelse(age>35 & age<45,"35-45",ifelse(age>25 & age<35,"25-35","<25")))))
setwd("E:/R-Programing/TelecomAnalysis-Churn/")
cust_demo <- read.csv("cellvoice_demo.csv")
cust_trans <- read.csv("cellvoice_trans.csv")
str(cust_demo)
summary(cust_demo)
head(cust_demo)
tail(cust_demo)
names(cust_demo)
str(cust_trans)
summary(cust_trans)
View(cust_360)
names(cust_trans)
head(cust_trans)
tail(cust_trans)
require(dplyr)
cust_360 = cust_demo %>% left_join(cust_trans,by='CustID')
cust_360<-cust_360 %>% mutate(age_seg = ifelse(age>60,"60+",ifelse(age>45 & age <60,"45-60",ifelse(age>35 & age<45,"35-45",ifelse(age>25 & age<35,"25-35","<25")))))
View(cust_360)
View(cust_360)
summary1 <- cust_360 %>% group_by(age_seg) %>% summarise(churn_cnt = sum(churn)) %>% mutate(churn_pct = churn_cnt/sum(churn_cnt))
View(summary1)
View(summary1)
summary1 <- cust_360 %>% group_by(age_seg) %>% summarise(churn_cnt = sum(churn)) %>% ungroup() %>% mutate(churn_pct = churn_cnt/sum(churn_cnt))
View(summary1)
View(summary1)
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",slidy_presentation())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
View(summary1)
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
View(cust_360)
View(cust_360)
summary2 <- cust_360 %>% group_by(region,ed) %>% summarise(Number_of_Customers=count(CustID),Number_of_Churner=
sum(churn)) %>% mutate(Percent_Churners = Number_of_Churner/sum(Number_of_Churners))
summary2 <- cust_360 %>% group_by(region,ed)
summary2 <- cust_360 %>% group_by(region,ed) %>% summarise(TotalCust=n(),
TotalChurners=sum(churn),
PercentChurn=TotalChurners/TotalCust,
AverageIncome=mean(income,na.rm=T),
AverageTenure=mean(tenure,na.rm=T),
TotalRevenue=sum((longmon+tollmon + equipmon
+cardmon+wiremon), na.rm = T))
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
?aov()
summarise(cust_360,avg = mean(churn,na.rm=T))
fit_age <- aov(churn ~ age_seg,data=cust_360)
summary(fit_age)
customer_360%>%group_by(age_bin)%>%
summarise(tot_cust = n(),
avg = mean(churn))
cust_360%>%group_by(age_bin)%>%
summarise(tot_cust = n(),
avg = mean(churn))
cust_360%>%group_by(age_seg)%>%
summarise(tot_cust = n(),
avg = mean(churn))
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
t.test(churn ~ gender , data = cust_360)
cust_360%>%group_by(age_seg)%>%
summarise(tot_cust = n(),
avg = mean(churn))
setwd("E:/R-Programing/TelecomAnalysis-Churn/")
cust_demo <- read.csv("cellvoice_demo.csv")
cust_trans <- read.csv("cellvoice_trans.csv")
str(cust_demo)
summary(cust_demo)
head(cust_demo)
tail(cust_demo)
names(cust_demo)
str(cust_trans)
summary(cust_trans)
names(cust_trans)
head(cust_trans)
tail(cust_trans)
require(dplyr)
cust_360 = cust_demo %>% left_join(cust_trans,by='CustID')
cust_360<-cust_360 %>% mutate(age_seg = ifelse(age>60,"60+",ifelse(age>45 & age <60,"45-60",ifelse(age>35 & age<45,"35-45",ifelse(age>25 & age<35,"25-35","<25")))))
summary1 <- cust_360 %>% group_by(age_seg) %>% summarise(churn_cnt = sum(churn)) %>% ungroup() %>% mutate(churn_pct = churn_cnt/sum(churn_cnt))
data.frame(summary1)
summary2 <- cust_360 %>% group_by(region,ed) %>% summarise(TotalCust=n(),
TotalChurners=sum(churn),
PercentChurn=TotalChurners/TotalCust,
AverageIncome=mean(income,na.rm=T),
AverageTenure=mean(tenure,na.rm=T),
TotalRevenue=sum((longmon+tollmon + equipmon
+cardmon+wiremon), na.rm = T))
data.frame(summary2)
cust_360%>%group_by(age_seg)%>%
summarise(tot_cust = n(),
avg = mean(churn))
### 1. Yes, Younger age group is more likely to churn
summarise(cust_360,avg = mean(churn,na.rm=T))
fit_age <- aov(churn ~ age_seg,data=cust_360)
summary(fit_age)
cust_360%>%group_by(age_seg)%>%
summarise(tot_cust = n(),
avg = mean(churn))
### 2.
cust_360 %>% group_by(gender) %>% summarise(
cust_360%>%group_by(age_seg)%>%
summarise(tot_cust = n(),
avg = mean(churn))
cust_360 %>% group_by(gender) %>% summarise(tot_cust = n(),
avg = mean(churn))
cust_360 %>% group_by(gender) %>% summarise(tot_cust = n(),avg_age = mean(age))
cust_360 %>% group_by(gender) %>% summarise(tot_cust = n(),avg_age = median(age))
cust_360 %>% group_by(gender) %>% summarise(tot_cust = n(),avg_age = mode(age))
cust_360 %>% group_by(gender) %>% summarise(tot_cust = n(),avg_age = modal(age))
cust_360 %>% group_by(custcat) %>% summarise(tot_cust = n(), avg = mean(churn))
fit_cust_cat <- aov(churn ~ custcat , data = customer_360)
fit_cust_cat <- aov(churn ~ custcat , data = cust_360)
summary(fit_cust_cat)
cust_360 %>% group_by(custcat) %>% summarise(tot_cust = n(), avg = mean(churn))
cust_360 %>% group_by(custcat,gender) %>% summarise(totalCustomer = n())
CrossTable(customer_360$custcat , customer_360$gender)
require(gmodels)
CrossTable(customer_360$custcat , customer_360$gender)
require(gmodels)
CrossTable(cust_360$custcat , cust_360$gender)
cust_360 %>% group_by(reside) %>% summarise(totalCustomer = n(),avg=mean(churn))
cust_360 %>% group_by(reside) %>% summarise(avg=mean(churn))
cust_360 %>% group_by(address) %>% summarise(totalCustomer = n(),avg=mean(churn))
cust_360 %>% group_by(marital,ed) %>% summarise(totalCustomer=n())
cust_360 %>% group_by(ed,marital) %>% summarise(totalCustomer=n())
cust_360 %>% group_by(retire) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(tollfree) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(equip) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(wireless) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(callcard) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(tollfree) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(equip) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(wireless) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(callcard) %>% summarise(totalCustomer=n(),avg=mean(churn))
cust_360 %>% group_by(region) %>% summarise(totalCustomer=n(),avg=mean(churn))
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
render("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis-Churn.rmd",html_document())
save.image("E:/R-Programing/TelecomAnalysis-Churn/TelecomAnalysis.RData")
cust_seg <- read.csv("C:/Users/Harmandeep/OneDrive/Analytix Labs/Statistics/Class-20-21 Files (Stats tests - Regression)/cust_seg.csv")
View(cust_seg)
cust_seg <- read.csv("E:/R-Programing/HypothesisTesting/cust_seg.csv")
cust_seg
cust_seg <- read.csv("E:/R-Programing/HypothesisTesting/cust_seg.csv")
t.test(cust_seg$Post_usage_1month,mu=50)
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
t.test(cust_seg$Post_usage_1month,cust_seg$pre_usage,paired = TRUE)
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
t.test(Latest_mon_usage ~ sex, data = cust_seg, var.equal = TRUE)
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
Anova_Segment = aov(Latest_month_usage ~ segment,data=cust_seg)
Anova_Segment = aov(Latest_mon_usage ~ segment,data=cust_seg)
cust_seg <- read.csv("E:/R-Programing/HypothesisTesting/cust_seg.csv")
t.test(cust_seg$Post_usage_1month,mu=50)
t.test(cust_seg$Post_usage_1month,cust_seg$pre_usage,paired = TRUE)
t.test(Latest_mon_usage ~ sex, data = cust_seg, var.equal = TRUE)
Anova_Segment = aov(Latest_mon_usage ~ segment,data=cust_seg)
summary(Anova_Segment)
model.tables(Anova_Segment,'means')
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
model.tables(Anova_Segment,'means')
model.tables(Anova_Segment,"means")
model.tables(Anova_Segment,"means")
data.frame(model.tables(Anova_Segment,"means"))
chisq.test(cust_seg$region,cust_seg$segment)
tab <- xtabs(~region + segment, data = cust_seg)
tab
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
cor.test(cust_seg$Latest_mon_usage,cust_seg$pre_usage, use="pairwise.complete.obs")
render('E:/R-Programing/HypothesisTesting/HypothesisTesting.Rmd',html_document())
save.image("E:/R-Programing/HypothesisTesting/HypothesisTesting.RData")
dietStudy <- read.csv('E:/R-Programing/CaseStudy4/dietstudy.csv')
head(dietStudy)
t.test(dietStudy$tg0,dietStudy$tg4,paired = TRUE)
t.test(dietStudy$wgt0,dietStudy$wgt4,paired = TRUE)
require(knitr)
require(markdown)
require(rmarkdown)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
creditpromo <- read.csv('E:/R-Programing/CaseStudy4/creditpromo.csv')
t.test(dollars ~ insert,data = creditpromo)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
t.test(dollars ~ insert,data = creditpromo,var.equal = TRUE)
t.test(dollars ~ insert,data = creditpromo)
pollination <- read.csv('E:/R-Programing/CaseStudy4/pollination.csv')
head(pollination)
head(creditpromo)
head(dietStudy)
t.test(pollination$Seed_Yield_Plant,mu=200)
t.test(Fruit_Wt ~ Group,data = pollination)
t.test(Seed_Yield_Plant ~ Group,data = pollination)
t.test(Seedling_length ~ Group,data = pollination)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
dvdplayer <- read.csv('E:/R-Programing/CaseStudy4/dvdplayer.csv')
head(dvdplayer)
head(dvdplayer)
head(dvdplayer)
Anova_Segment <- aov(dvdscore ~ agegroup,data = dvdplayer)
summary(Anova_Segment)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
tolerance <- read.csv('E:/R-Programing/CaseStudy4/tolerance.csv')
cor.test(tolerance$Susc_Check,tolerance$Tol_Score,use='pairwise.complete.obs')
AOV <- aov(Tol_Score ~ Variety,data=tolerance)
summary(AOV)
survey <- read.csv('E:/R-Programing/CaseStudy4/sample_survey.csv')
chisq.test(survey$marital,survey$educ)
xtabs(~marital + educ,data = survey)
xtabs(~educ + marital,data = survey)
educ_marital <- survey %>% group_by(marital) %>% summarise(avg_educ = mean(educ))
educ_marital
educ_marital <- survey %>% group_by(marital) %>% summarise(avg_educ = mean(educ,na.rm=T))
educ_marital
educ_marital <- survey %>% group_by(marital,na.rm=T) %>% summarise(avg_educ = mean(educ,na.rm=T))
educ_marital
educ_marital <- survey %>% group_by(marital) %>% summarise(avg_educ = mean(educ,na.rm=T))
educ_marital
chisq.test(survey$marital,survey$educ)
educ_marital
xtabs(~educ + marital,data = survey)
chisq.test(survey$educ,survey$marital)
educ_marital <- survey %>% group_by(marital) %>% summarise(count_educ = count(educ,na.rm=T))
vg_educ
educ_marital <- survey %>% group_by(marital) %>% summarise(avg_educ = mean(educ,na.rm=T))
educ_marital
chisq.test(survey$marital,survey$happy)
chisq.test(survey$income,survey$happy)
xtabs(~marital + happy,data = survey)
xtabs(~marital + income,data = survey)
xtabs(~happy + income,data = survey)
xtabs(~happy + marital,data = survey)
xtabs(~income + happy,data = survey)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
chisq.test(survey$wrkstat,survey$marital)
xtabs(~wrkstat + marital,data = survey)
xtabs(~marital + educ,data = survey)
educ
xtabs(~educ + marital,data = survey)
xtabs(~happy + marital,data = survey)
xtabs(income + happy,data = survey)
xtabs(~income + happy,data = survey)
chisq.test(survey$income,survey$happy)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
marital_happy_count <- xtabs(~happy + marital,data = survey)
barplot(two_var_tables,main='Stacked Chart',legend=c('Marital','Happy'),beside = F,
col = c('red','green'),width=10,args.legend = list(title='Marital Status Vs Happiness',x='topright',cex=0.6),
ylim = c(0,15),xlab = 'Marital',ylab = 'Count')
barplot(marital_happy_count,main='Stacked Chart',legend=c('Marital','Happy'),beside = F,
col = c('red','green'),width=10,args.legend = list(title='Marital Status Vs Happiness',x='topright',cex=0.6),
ylim = c(0,15),xlab = 'Marital',ylab = 'Count')
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
marital_happy_count <- table(survey$marital,survey$happy)
barplot(marital_happy_count,main='Stacked Chart',legend=c('Marital','Happy'),beside = F,
col = c('red','green'),width=10,args.legend = list(title='Marital Status Vs Happiness',x='topright',cex=0.6),
ylim = c(0,15),xlab = 'Marital',ylab = 'Count')
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
marital_happy_count
two_var_tables <- table(stores$OwnStore,stores$StoreSegment)
barplot(marital_happy_count,main='Stacked Chart',legend=c('Marital','Happy'),beside = F,
col = c('red','green'),width=10,args.legend = list(title='Marital Status Vs Happiness',x='topright',cex=0.6),
ylim = c(0,15),xlab = 'Marital',ylab = 'Count')
require(ggplot)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
barplot(survey,main='Stacked Chart',legend=c('Marital','Happy'),beside = F,
col = c('red','green'),width=10,args.legend = list(title='Marital Status Vs Happiness',x='topright',cex=0.6),
ylim = c(0,15),xlab = 'Happiness',ylab = 'Count')
ggplot(data = marital_happy_count,aes(x=marital,fill=factor(happy))) +
geom_bar(stat = 'bin',position = 'dodge',binwidth = 0.5)
require(ggplot2)
ggplot(data = marital_happy_count,aes(x=marital,fill=factor(happy))) +
geom_bar(stat = 'bin',position = 'dodge',binwidth = 0.5)
ggplot(data = survey,aes(x=marital,fill=factor(happy))) +
geom_bar(stat = 'bin',position = 'dodge',binwidth = 0.5)
ggplot(data = survey,aes(x=marital,fill=factor(happy))) +
geom_histogram(stat = 'count',position = 'dodge',binwidth = 0.5)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
ggplot(data = survey,aes(x=marital,fill=factor(happy))) +
geom_bar()
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
```{r,echo=FALSE}
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
ggplot(data = survey,aes(x=income,fill=factor(happy)))+geom_bar()+coord_flip
ggplot(data = survey,aes(x=income,fill=factor(happy)))+geom_bar()+coord_flip()
ggplot(data = survey,aes(x=marital,fill=factor(happy))) + geom_bar()
ggplot(data = survey,aes(x=educ,fill=factor(marital)))+geom_bar() + coord_flip()
ggplot(data = survey,aes(x=educ,fill=factor(marital)))+geom_bar()
chisq.test(survey$educ,survey$marital)
ggplot(data = survey,aes(x=marital,fill=factor(educ)))+geom_bar()
ggplot(data = survey,aes(x=educ,fill=factor(marital)))+geom_bar()
ggplot(data = survey,aes(x = wrkstat,fill = factor(marital))) + geom_bar()
ggplot(data = survey,aes(x = wrkstat,fill = factor(marital))) + geom_bar() + coord_flip()
chisq.test(survey$wrkstat,survey$marital)
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
render('E:/R-Programing/CaseStudy4/CaseStudy4.Rmd',html_document())
save.image("E:/R-Programing/CaseStudy4/CaseStudy4.RData")
