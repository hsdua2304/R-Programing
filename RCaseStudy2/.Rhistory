cust_leftjoin$NumberOfDependents[cust_leftjoin$NumberOfDependents=='#N/A']<-NA
cust_leftjoin$MonthlyIncome[cust_leftjoin$MonthlyIncome=='#N/A']<-NA
cust_group<-group_by(cust_leftjoin,Gender,SeriousDlqin2yrs)
str(cust_leftjoin)
cust_group<-group_by(cust_leftjoin,Gender,SeriousDlqin2yrs)
summary(cust_group,NumberOfCustomers=n_distinct(ID,na.rm = T),
PercentageOfCustomers=n_distinct(ID,na.rm = T)/n_distinct(cust_leftjoin$ID,na.rm = T))
View(summary(cust_group,NumberOfCustomers=n_distinct(ID,na.rm = T),
PercentageOfCustomers=n_distinct(ID,na.rm = T)/n_distinct(cust_leftjoin$ID,na.rm = T)))
View(cust_group)
cust_leftjoin<-mutate(cust_leftjoin,Gender=as.factor(Gender),
SeriousDlqin2yrs=as.factor(SeriousDlqin2yrs),
MonthlyIncome=as.numeric(as.character(MonthlyIncome)),
NumberOfDependents=as.numeric(as.character(NumberOfDependents)))
cust_leftjoin$NumberOfDependents[cust_leftjoin$NumberOfDependents=='#N/A']<-NA
cust_leftjoin$MonthlyIncome[cust_leftjoin$MonthlyIncome=='#N/A']<-NA
cust_group<-group_by(cust_leftjoin,Gender,SeriousDlqin2yrs)
View(cust_group)
str(cust_group)
View(summary(cust_group,NumberOfCustomers=n_distinct(ID,na.rm = T),
PercentageOfCustomers=n_distinct(ID,na.rm = T)/n_distinct(cust_leftjoin$ID,na.rm = T)))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID,na.rm = T),
PercentageOfCustomers=n_distinct(ID,na.rm = T)/n_distinct(cust_leftjoin$ID,na.rm = T)))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=n_distinct(ID,na.rm = T)/n_distinct(cust_leftjoin$ID,na.rm = T)))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=n_distinct(ID)/n_distinct(cust_leftjoin$ID)))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100))
(count(cust_leftjoin,Martial_Status,wt='Married'))
(count(cust_leftjoin,Martial_Status)[1])
(count(cust_leftjoin,Martial_Status)[1,])
(count(cust_leftjoin,Martial_Status)[,[1,])
n_distinct(cust_leftjoin$ID,na.rm = T)
# Problem : 10
#-------------
str(cust_leftjoin)
cust_leftjoin<-mutate(cust_leftjoin,Gender=as.factor(Gender),
SeriousDlqin2yrs=as.factor(SeriousDlqin2yrs),
MonthlyIncome=as.numeric(as.character(MonthlyIncome)),
NumberOfDependents=as.numeric(as.character(NumberOfDependents)))
cust_leftjoin$NumberOfDependents[cust_leftjoin$NumberOfDependents=='#N/A']<-NA
cust_leftjoin$MonthlyIncome[cust_leftjoin$MonthlyIncome=='#N/A']<-NA
cust_group<-group_by(cust_leftjoin,Gender,SeriousDlqin2yrs)
str(cust_group)
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T),
NumberOfMarriedCustomers=count(Martial_Status,wt='Married')))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T)))
which(cust_leftjoin$Martial_Status=='Married')
length(which(cust_leftjoin$Martial_Status=='Married'))
(count(cust_leftjoin,Martial_Status))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T),
NumberOfMarriedCustomer=length(which(Martial_Status=='Married')),
PercentMarriedCustomer=(length(which(Martial_Status=='Married'))/length(which(cust_leftjoin$Martial_Status=='Married'))*100))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T),
NumberOfMarriedCustomer=length(which(Martial_Status=='Married')),
PercentMarriedCustomer=(length(which(Martial_Status=='Married'))/length(which(cust_leftjoin$Martial_Status=='Married')))*100))
View(summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T),
NumberOfMarriedCustomer=length(which(Martial_Status=='Married')),
PercentMarriedCustomer=
(length(which(Martial_Status=='Married'))/length(which(cust_leftjoin$Martial_Status=='Married')))*100))
Summaries_report = summarise(cust_group,NumberOfCustomers=n_distinct(ID),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T),
NumberOfMarriedCustomer=length(which(Martial_Status=='Married')),
PercentMarriedCustomer=
(length(which(Martial_Status=='Married'))/length(which(cust_leftjoin$Martial_Status=='Married')))*100)
View(Summaries_report)
str(cust_group)
Summaries_report = summarise(cust_group,NumberOfCustomers=n_distinct(ID,na.rm = T),
PercentageOfCustomers=(n_distinct(ID)/n_distinct(cust_leftjoin$ID))*100,
AverageRevolvingUtilization=mean(RevolvingUtilization,na.rm = T),
StandardDeviation=sd(RevolvingUtilization,na.rm=T),
AverageIncome=mean(MonthlyIncome,na.rm = T),
MaxIncome=max(MonthlyIncome,na.rm = T),
SDIncome=sd(MonthlyIncome,na.rm = T),
AverageAge=mean(age,na.rm = T),
AverageDependents=mean(NumberOfDependents,na.rm = T),
NumberOfMarriedCustomer=length(which(Martial_Status=='Married')),
PercentMarriedCustomer=
(length(which(Martial_Status=='Married'))/length(which(cust_leftjoin$Martial_Status=='Married')))*100)
length(unique(ID))
length(unique(customer_360$ID))
View(customer_360)
duplicated(customer_360$ID)
duplicates<-duplicated(customer_360$ID)
View(duplicates)
length(duplicates)
customer_360[duplicated(customer_360$ID),]
customer_360[unique(customer_360$ID),]
customer_360<-customer_360[unique(customer_360$ID),]
View(customer_360)
str(customer_360)
stores<-read.csv(choose.files(),header = T)
data<-stores
View(data)
summary(data)
names(data)
mean(data$TotalSales)
View(data)
with(data,mean(TotalSales))
with(data,mean(TotalSales),mean(OperatingCost))
with(data,mean(TotalSales,OperatingCost))
with(data,mean(TotalSales),mean(OperatingCost))
var(data$TotalSales)
quantile(data$TotalSales,c(.3,.6,.9))
quantile(data$TotalSales,probs = seq(0,1,0.1))
quantile(data$TotalSales,probs = seq(0,1,0.2))
which.max(data$TotalSales)
data$TotalSales[15]
rank(data$TotalSales,ties.method = 'first')
data$Sales_rank<-rank(data$TotalSales,ties.method = 'first')
View(data)
describe(data)
s1<-table(stores$StoreType)
s1
View(s1)
s2<-prop.table(s1)
View(s2)
s2<-prop.table(table(stores$StoreType))
View(s2)
rbind(s1,s2)
cbind(s1,s2)
require(gmodels)
install.packages(gmodels,dependencies = T)
install.packages('gmodels',dependencies = T)
install.packages('gmodels',dependencies = T)
require(gmodels)
CrossTable(stores$StoreType)
CrossTable(stores)
table(stores$StoreType,stores$Location)
prop.table(table(stores$StoreType,stores$Location))
CrossTable(stores$StoreType,stores$Location)
crossprod(stores$StoreType,stores$Location,prop.r=F,prop.c=F)
CrossTable(stores$StoreType,stores$Location,prop.r=F,prop.c=F)
CrossTable(stores$StoreType,stores$Location,prop.r=F,prop.c=F,prop.chisq = F)
require(vcd)
install.packages('vcd',dependencies = T)
require(vcd)
xtabs(~stores$Location+stores$StoreType)
xtabs(stores$TotalSales~stores$Location+stores$StoreType)
prop.table(xtabs(stores$TotalSales~stores$Location+stores$StoreType))
describe.data.frame(stores)
require(psych)
describe.data.frame(stores)
describe(data.frame(stores))
data.frame(stores)
mysats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
q1<-quantile(a,.25)
q3<-quantile(a,.75)
max<-max(a)
UL<-m+3*s
LL<-m-3*s
outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,outlier_flag=outlier_flag,mean=m,stdev=s,min=min,max=max,UL=UL,LL=LL))
}
mystats(stores$OperatingCost)
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
q1<-quantile(a,.25)
q3<-quantile(a,.75)
max<-max(a)
UL<-m+3*s
LL<-m-3*s
outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,outlier_flag=outlier_flag,mean=m,stdev=s,min=min,max=max,UL=UL,LL=LL))
}
mystats(stores$OperatingCost)
t(mystats(stores$OperatingCost))
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystats)))
View(data_audit_report)
str(customer_360)
customer_360$State<-as.factor(customer_360$State)
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
# max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p1=p1,p5=p5,p10=p10,q1=q1,q2=q2,
q3=q3,p90=p90,p95=p95,p99=p99,max=max))
}
names(customer_360)
View(customer_360)
customer_360$Own_House<as.factor(customer_360$Own_House)
customer_360$Own_House<-as.factor(customer_360$Own_House)
names(customer_360)
numerical_statistics<-select(customer_360,c(2,3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,mystats)))
View(numerical_stat_report)
View(numerical_statistics)
View(store[6:15])
View(stores[6:15])
numerical_stat_report<-data.frame(apply(numerical_statistics,2,mystats))
View(numerical_statistics)
View(numerical_stat_report)
numerical_statistics
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
# max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p1=p1,p5=p5,p10=p10,q1=q1,q2=q2,
q3=q3,p90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(2,3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,mystats)))
View(numerical_stat_report)
data_audit_report<-data.frame(apply(stores[6:15],2,mystats))
View(data_audit_report)
data_audit_report<-data.frame(apply(stores[6:15],2,mystats))
data_audit_report<-data.frame(apply(stores[6:15],2,mystats))
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystats)))
View(data_audit_report)
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
q1<-quantile(a,.25)
q3<-quantile(a,.75)
max<-max(a)
UL<-m+3*s
LL<-m-3*s
outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,outlier_flag=outlier_flag,mean=m,stdev=s,min=min,max=max,UL=UL,LL=LL))
}
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystats)))
View(data_audit_report)
stores[6:15][2]
stores[6:15]
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
# max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p1=p1,p5=p5,p10=p10,q1=q1,q2=q2,
q3=q3,p90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(2,3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics[1:9],2,mystats)))
View(numerical_stat_report)
numerical_stat_report<-as.data.frame(t(apply(numerical_statistics[1:9],2,mystats)))
View(numerical_stat_report)
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystats)))
View(data_audit_report)
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p1=p1,p5=p5,p10=p10,q1=q1,q2=q2,q3=q3,p90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(2,3,5,6,7,9,12,14,22))
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p1=p1,p5=p5,p10=p10,q1=q1,q2=q2,
q3=q3,p90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(2,3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,mystats)))
View(numerical_stat_report)
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystats)))
View(data_audit_report)
mystatistics<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
q1<-quantile(a,.25)
q3<-quantile(a,.75)
max<-max(a)
UL<-m+3*s
LL<-m-3*s
outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,outlier_flag=outlier_flag,mean=m,stdev=s,min=min,max=max,UL=UL,LL=LL))
}
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystats)))
View(data_audit_report)
data_audit_report<-data.frame(t(apply(stores[6:15],2,mystatistics)))
View(data_audit_report)
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p1=p1,p5=p5,p10=p10,q1=q1,q2=q2,
q3=q3,p_90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(2,3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,mystats)))
View(numerical_stat_report)
numerical_statistics<-select(customer_360,c(3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,mystats)))
View(numerical_stat_report)
customer_360$SeriousDlqin2yrs<-as.factor(customer_360$SeriousDlqin2yrs)
mystats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p=p1,p=p5,p=p10,q1=q1,q2=q2,
q3=q3,p_90=p90,p95=p95,p99=p99,max=max))
}
numerical_statistics<-select(customer_360,c(3,5,6,7,9,12,14,22))
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,mystats)))
View(numerical_stat_report)
numerical_stats<-function(x){
nmiss<-sum(is.na(x))
a<-x[!is.na(x)]
m<-mean(a)
n<-length(a)
s<-sd(a)
v<-var(a)
min<-min(a)
p1<-quantile(a,.01)
p5<-quantile(a,.05)
p10<-quantile(a,.10)
q1<-quantile(a,.25)
q2<-quantile(a,.50)
q3<-quantile(a,.75)
p90<-quantile(a,.90)
p95<-quantile(a,.95)
p99<-quantile(a,.99)
max<-max(a)
# UL<-m+3*s
# LL<-m-3*s
# outlier_flag<-max>UL | min<LL
return(c(n=n,nmiss=nmiss,mean=m,stdev=s,var=v,min=min,p=p1,p=p5,p=p10,q1=q1,q2=q2,
q3=q3,p_90=p90,p95=p95,p99=p99,max=max))
}
numerical_stat_report<-data.frame(t(apply(numerical_statistics,2,numerical_stats)))
View(numerical_stat_report)
